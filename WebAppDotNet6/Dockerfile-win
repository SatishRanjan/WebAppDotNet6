FROM mcr.microsoft.com/dotnet/aspnet:6.0-nanoserver-20H2 AS base
#FROM mcr.microsoft.com/dotnet/aspnet:6.0-nanoserver-ltsc2022 AS base
WORKDIR /app
EXPOSE 80
EXPOSE 443
FROM mcr.microsoft.com/dotnet/sdk:6.0 AS build
WORKDIR /src
COPY ["WebAppDotNet6.csproj", ""]
RUN dotnet restore "./WebAppDotNet6.csproj"
COPY . .
WORKDIR "/src/."
RUN dotnet build "WebAppDotNet6.csproj" -c Release -o /app/build
FROM build AS publish
RUN dotnet publish "WebAppDotNet6.csproj" -c Release -o /app/publish
FROM base AS final
WORKDIR /app
COPY --from=publish /app/publish .
COPY tz-6 /tz-6
COPY cert-test /cert-test
COPY certsname-printer /certsname-printer
COPY update-history-util /update-history-util
COPY certificates/ /certs/
COPY LogonUtil /logonutil
COPY kuduagent_win /kuduagent

ENV WEBSITE_PRIVATE_CERTS_PATH="c:\certs\private"
ENV WEBSITE_PUBLIC_CERTS_PATH="c:\certs\public"
ENV WEBSITE_INTERMEDIATE_CERTS_PATH="c:\certs\intermediate"
ENV WEBSITE_ROOT_CERTS_PATH="c:\certs\root"
COPY startuphook /startuphook
ENV DOTNET_STARTUP_HOOKS="c:\startuphook\StaruphookLib.dll"
#ENV Kestrel:Endpoints:Http:Url="http://*:80"
ENV TEST_ENV=true
ENV WEBSITE_ISOLATION=hyperv

ENTRYPOINT ["dotnet", "WebAppDotNet6.dll"]


# docker build . -t sratdocker/dotnet8webappwindows -f Dockerfile-win
# expose webapp's container port 80 on host port 5001 and webjobs port 50555 on host port 5002
# docker run -p 5001:80 -p 5002:50555 docker.io/sratdocker/dotnet6webappwindows